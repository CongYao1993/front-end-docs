import{_ as s,c as n,o as a,e}from"./app-CCtMo5dT.js";const p={},t=e(`<div class="custom-container tip"><p class="custom-container-title">问题</p><p>Webpack 打包流程是怎样的？<br><br> Loader 和 Plugin 有什么区别？<br> Webpack 配置中用过哪些 Loader ？都有什么作用？<br> Webpack 配置中用过哪些 Plugin ？都有什么作用？<br> 如何编写 Loader ? 介绍一下思路？<br> 如何编写 Plugin ? 介绍一下思路？<br><br> tree-shaking 实现原理是怎样的？<br> 热更新（HMR）是如何实现？<br> Webpack 打包中 Babel 插件是如何工作的？<br><br> Webpack 和 Rollup 有什么相同点与不同点？<br><br> Webpack5 更新了哪些新特性？<br><br> Webpack 层面如何性能优化？<br> Webpack optimize 有配置过吗？可以简单说说吗？</p></div><p>webpack 是一个 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会从一个或多个入口构建一个依赖图，将项目中所需的每一个模块编译组合成一个或多个 bundles 输出。</p><p>webpack 的作用：</p><ul><li>编译浏览器不支持的语法：例如：ES6 等 JS 新语法、Less/Sass 等 CSS 预处理器、JSX 等</li><li>兼容性处理：CSS 前缀补全</li><li>压缩代码、图片等资源</li><li>处理传统 JS 文件全局作用域问题</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">mkdir</span> webpack-demo</span>
<span class="line"><span class="token builtin class-name">cd</span> webpack-demo</span>
<span class="line"><span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> webpack webpack-cli --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-webpack-配置项" tabindex="-1"><a class="header-anchor" href="#_1-webpack-配置项"><span>1. webpack 配置项</span></a></h2><p>webpack 默认配置文件为根目录下的 <code>webpack.config.js</code>，可以通过 <code>webpack --config</code> 指定配置文件。</p><p><code>webpack.config.js</code>导出一些配置项，比如 entry、output、module、plugins 等</p><h3 id="_1-1-入口-entry" tabindex="-1"><a class="header-anchor" href="#_1-1-入口-entry"><span>1.1 入口 entry</span></a></h3><p>入口指定 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。</p><p>默认值是 <code>./src/index.js</code>，可以通过配置 <code>entry</code> 属性，来指定一个（或多个）不同的入口起点。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./path/to/my/entry/file.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-输出-output" tabindex="-1"><a class="header-anchor" href="#_1-2-输出-output"><span>1.2 输出 output</span></a></h3><p>输出告诉 webpack 在哪里输出它所创建的 bundle，以及如何命名这些文件。</p><p>主要输出文件的默认值是 <code>./dist/main.js</code>，其它生成文件默认放置在 <code>./dist</code> 文件夹中。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;bundle.js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 输出文件的文件名</span></span>
<span class="line">    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 自动将上次打包目录资源清空，webpack5.20.0+</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-loader-和内置的-asset-modules" tabindex="-1"><a class="header-anchor" href="#_1-3-loader-和内置的-asset-modules"><span>1.3 loader 和内置的 Asset Modules</span></a></h3><p>loader 用于转换特定类型的文件。</p><p>webpack 默认只支持 JavaScript 和 json 两种文件类型，通过 loader 或内置的 Asset Modules 支持其它类型的文件，把它们转化成有效的模块，添加到依赖图中。</p><p>加载 CSS：</p><ul><li><code>style-loader</code>: 动态创建一个 <code>&lt;style&gt;</code> 标签，将 CSS 添加到 <code>&lt;style&gt;</code> 标签里</li><li><code>css-loader</code>: 允许将 CSS 文件通过 require 的方式引入，并返回 CSS 代码，支持 .css 文件的加载和解析</li><li><code>less-loader</code>: 将 less 转换为 CSS</li><li><code>sass-loader</code>: 将 sass 转换为 CSS</li><li><code>postcss-loader</code>: 用 postcss 来处理 CSS</li></ul><p>加载图像和字体等资源：</p><ul><li><code>file-loader</code>: 分发文件到 output 目录并返回相对路径，进行图片、字体等的打包</li><li><code>url-loader</code>: 和 file-loader 类似，但是当文件小于设定的 limit 时可以返回一个 Data Url</li></ul><p>处理 JS：</p><ul><li><code>babel-loader</code>: 转换 ES6 等 JS 新特性语法</li><li><code>ts-loader</code>: 将 TS 转换为 JS</li><li><code>raw-loader</code>: 将文件以字符串的形式导入</li><li><code>thread-loader</code>: 多进程打包 JS 和 CSS</li></ul><h4 id="oneof" tabindex="-1"><a class="header-anchor" href="#oneof"><span>OneOf</span></a></h4><p>打包时每个文件都会经过所有 loader 处理，每个正则都要匹配一次。比较慢。</p><p>使用 OneOf 时，只要匹配上一个 loader, 剩下的就不匹配了。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">oneOf</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;style-loader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;css-loader&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-plugins" tabindex="-1"><a class="header-anchor" href="#_1-4-plugins"><span>1.4 plugins</span></a></h3><p>plugins 作用于整个构建过程，执行不同的任务，如对输出的 JS 文件的优化、资源管理和环境变量的注入。</p><ul><li><code>html-webpack-plugin</code>：创建 html 文件去承载输出的 bundle</li><li><code>mini-css-extract-plugin</code>：将 CSS 从 bunlde 文件里提取成一个独立的 .css 文件</li><li><code>css-minimizer-webpack-plugin</code>：压缩 CSS</li><li><code>terser-webpack-plugin</code>：压缩 JS</li><li><code>clean-webpack-plugin</code>：自动清理构建目录</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.html&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-mode" tabindex="-1"><a class="header-anchor" href="#_1-5-mode"><span>1.5 mode</span></a></h3><p>mode 用来指定当前的构建环境是：<code>production</code>、<code>development</code> 还是 <code>none</code>。</p><p>设置 mode 参数，可以启用 webpack 内置在相应环境下的优化。</p><ul><li>development：开发模式，打包更加快速，省了代码优化步骤</li><li>production：生产模式，打包比较慢，会开启 tree-shaking 和 压缩代码</li><li>none：不使用任何默认优化选项</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-处理-html" tabindex="-1"><a class="header-anchor" href="#_2-处理-html"><span>2. 处理 HTML</span></a></h2><h3 id="_2-1-html-webpack-plugin" tabindex="-1"><a class="header-anchor" href="#_2-1-html-webpack-plugin"><span>2.1 html-webpack-plugin</span></a></h3><p>该插件将为你生成一个 HTML 文件或者以指定的 HTML 文件为模版，在 body 中使用 script 标签引入你所有 webpack 生成的 bundle。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev html-webpack-plugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;html-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;webpack App&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// 以 public/index.html 为模板创建文件</span></span>
<span class="line">      <span class="token comment">// 新的 html 文件有两个特点：内容和源文件一致；自动引入打包生成的 js 等资源</span></span>
<span class="line">      <span class="token literal-property property">template</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;public/index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// mode: &#39;developmemt&#39; 默认为true</span></span>
<span class="line">      <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-html-文件压缩" tabindex="-1"><a class="header-anchor" href="#_2-2-html-文件压缩"><span>2.2 HTML 文件压缩</span></a></h3><p><code>mode: &#39;developmemt&#39;</code>默认开启了 html 压缩。</p><h2 id="_3-处理-css" tabindex="-1"><a class="header-anchor" href="#_3-处理-css"><span>3. 处理 CSS</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 分离 CSS 文件</span></span>
<span class="line"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mini-css-extract-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 压缩 CSS</span></span>
<span class="line"><span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;css-minimizer-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">&quot;css-loader&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span></span>
<span class="line">          <span class="token string">&quot;css-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token string">&quot;less-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;postcss-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token literal-property property">postcssOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">                  <span class="token comment">//   [</span></span>
<span class="line">                  <span class="token comment">//     &quot;autoprefixer&quot;,</span></span>
<span class="line">                  <span class="token comment">//     {</span></span>
<span class="line">                  <span class="token comment">//       browsers: [&quot;last 2 version&quot;, &quot;&gt; 1%&quot;, &quot;not dead&quot;],</span></span>
<span class="line">                  <span class="token comment">//     },</span></span>
<span class="line">                  <span class="token comment">//   ],</span></span>
<span class="line">                  <span class="token string">&quot;postcss-preset-env&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 能解决大多数样式兼容性问题</span></span>
<span class="line">                <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;px2rem-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token literal-property property">remUnit</span><span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span></span>
<span class="line">              <span class="token literal-property property">remPrecision</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token comment">// 仅在生产环境生效</span></span>
<span class="line">      <span class="token comment">// 在 webpack@5 中，可以使用 \`...\` 语法来扩展现有的 minimizer（即 \`terser-webpack-plugin\`）</span></span>
<span class="line">      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 定义输出文件名和目录</span></span>
<span class="line">      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;static/css/main.css&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-css-loader" tabindex="-1"><a class="header-anchor" href="#_3-1-css-loader"><span>3.1 CSS Loader</span></a></h3><ul><li><code>style-loader</code>: 动态创建一个 <code>&lt;style&gt;</code> 标签，将 CSS 添加到 <code>&lt;style&gt;</code> 标签里</li><li><code>css-loader</code>: 对@import 和 url() 进行处理，就像 js 解析 import/require() 一样。</li><li><code>less-loader</code>: 将 less 转换为 CSS</li><li><code>sass-loader</code>: 将 sass 转换为 CSS</li><li><code>postcss-loader</code>: 用 postcss 来处理 CSS</li></ul><p>loader 可以链式调用，逆序执行，前一个 loader 将其转换结果传递给下一个 loader，依此类推，最后的 loader 返回 JavaScript。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev style-loader css-loader less-loader</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// 处理顺序是从右往左</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;style-loader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;css-loader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;less-loader&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-分离-css-文件" tabindex="-1"><a class="header-anchor" href="#_3-2-分离-css-文件"><span>3.2 分离 CSS 文件</span></a></h3><p>CSS 文件目前被打包到 js 文件中，当 js 文件加载时，会创建一个 style 标签来生成样式。会出现闪屏现象，用户体验不好。</p><p>应该将 CSS 提取为单独的 CSS 文件，通过 link 标签加载。</p><p>MiniCssExtractPlugin.loader 不能和 style-loader 一起使用，二者功能互斥。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev mini-css-extract-plugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-3-压缩-css" tabindex="-1"><a class="header-anchor" href="#_3-3-压缩-css"><span>3.3 压缩 CSS</span></a></h3><p>该插件使用 cssnano 优化和压缩 CSS。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev css-minimizer-webpack-plugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-4-自动补齐-css-前缀" tabindex="-1"><a class="header-anchor" href="#_3-4-自动补齐-css-前缀"><span>3.4 自动补齐 CSS 前缀</span></a></h3><p>postcss 是一款使用 JS 插件转换样式的工具。这些插件可以对 CSS 进行 lint 处理，支持变量和混合，转换未来的 CSS 语法、内联图像等。</p><ul><li><code>autoprefixer</code>：使用 Can I Use 补齐 CSS 前缀。</li><li><code>postcss-preset-env</code>：允许你使用最新的 CSS 特性，根据目标浏览器或配置，将现代 CSS 转换为兼容性更强的 CSS，自动添加所需的前缀。</li></ul><p>postcss-preset-env 包括 autoprefixer，browsers 选项将自动传递给它。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev postcss-loader postcss postcss-preset-env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>所有浏览器都已支持不带浏览器引擎前缀的过渡。</p><h3 id="_3-5-px-自动转换-rem" tabindex="-1"><a class="header-anchor" href="#_3-5-px-自动转换-rem"><span>3.5 px 自动转换 rem</span></a></h3><p>CSS 媒体查询实现响应式布局时，需要写多套适配样式代码。</p><p><code>px2rem-loader</code>：根据设计稿编写代码时，可以按照 px 单位写。编写完成后，使用 px2rem-loader，将 px 转换成 rem。</p><h2 id="_4-加载图像、字体等资源" tabindex="-1"><a class="header-anchor" href="#_4-加载图像、字体等资源"><span>4. 加载图像、字体等资源</span></a></h2><ul><li><code>type: &quot;asset/resource&quot;</code> 或 <code>file-loader</code>, 将文件转化成 webpack 能识别的资源，其他不做处理</li><li><code>type: &quot;asset&quot;</code> 或 <code>url-loader</code>, 将文件转化成 webpack 能识别的资源，同时可以设置较小资源自动转化为 base64</li></ul><p>如果设置较小资源自动转化为 base64：</p><ul><li>优点：减少请求数量</li><li>缺点：体积变得更大</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev file-loader</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// webpack 5</span></span>
<span class="line"><span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|svg|jpg|jpeg|gif)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">dataUrlCondition</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">maxSize</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">// 小于10kb的图片会被base64处理</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 将图片文件输出到 static/imgs 目录中</span></span>
<span class="line">      <span class="token comment">// 将图片文件命名 [hash:8][ext][query]</span></span>
<span class="line">      <span class="token comment">// [hash:8]: hash值取8位</span></span>
<span class="line">      <span class="token comment">// [ext]: 使用之前的文件扩展名</span></span>
<span class="line">      <span class="token comment">// [query]: 添加之前的query参数</span></span>
<span class="line">      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;static/imgs/[hash:8][ext][query]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(woff|woff2|eot|ttf|otf)$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset/resource&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// webpack 4</span></span>
<span class="line"><span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|svg|jpg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;file-loader&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(woff|woff2|eot|ttf|otf)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;file-loader&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-处理-js" tabindex="-1"><a class="header-anchor" href="#_5-处理-js"><span>5. 处理 JS</span></a></h2><h3 id="_5-1-babel-loader" tabindex="-1"><a class="header-anchor" href="#_5-1-babel-loader"><span>5.1 babel-loader</span></a></h3><p>babel-loader 是 JavaScript 编译器，主要用于将 ES6 语法代码转换为向后兼容的 JavaScript 语法，以便能够运行在旧版本浏览器中。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev babel-loader @babel/core @babel/preset-env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="babel-配置文件" tabindex="-1"><a class="header-anchor" href="#babel-配置文件"><span>Babel 配置文件</span></a></h4><p>配置文件由很多种写法：</p><ul><li><code>babel.config.js</code> 或 <code>babel.config.json</code>：新建文件，位于项目根目录</li><li><code>.babelrc</code>、<code>.babelrc.js</code> 或 <code>.babelrc.json</code>：新建文件，位于项目根目录</li><li><code>package.json</code> 中 <code>babel</code> 选项：不需要创建文件</li></ul><p>Babel 会查找和自动读取它们，所以以上配置文件只需要存在一个即可。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// babel.config.js</span></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@babel/preset-react&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>presets 预设，就是一组 Babel 插件, 扩展 Babel 功能。</p><ul><li><code>@babel/preset-env</code>：一个智能预设，允许您使用最新的 JavaScript。</li><li><code>@babel/preset-react</code>：一个用来编译 React jsx 语法的预设</li><li><code>@babel/preset-typescript</code>：一个用来编译 TypeScript 语法的预设</li></ul><h4 id="babel-loader" tabindex="-1"><a class="header-anchor" href="#babel-loader"><span>babel-loader</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 排除node_modules代码不编译</span></span>
<span class="line">        <span class="token comment">// include: path.resolve(__dirname, &quot;../src&quot;),</span></span>
<span class="line">        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>include</code> 包含：只处理 xxx 文件</li><li><code>exclude</code> 排除：除了 xxx 文件以外其他文件都处理</li></ul><p>第三方的库或插件下载到 node_modules 中，这些文件是不需要编译可以直接使用的。所以对 js 文件处理时，要排除 node_modules 下面的文件，提高构建速度。</p><h3 id="_5-2-js-压缩" tabindex="-1"><a class="header-anchor" href="#_5-2-js-压缩"><span>5.2 JS 压缩</span></a></h3><p><code>mode: &#39;developmemt&#39;</code>默认开启了 js 压缩，通过 <code>terser-webpack-plugin</code> 插件压缩。</p><p>当我们手动配置 optimization 选项之后，不再默认对 js 进行压缩，需要手动去配置。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;terser-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">minimize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启最小化</span></span>
<span class="line">    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-文件指纹" tabindex="-1"><a class="header-anchor" href="#_6-文件指纹"><span>6. 文件指纹</span></a></h2><p>webpack 文件指纹是在文件名后面加上 hash 值。</p><p>文件指纹通常用于做版本管理。新版本发布，只需要发布修改的文件；没有修改的文件可以继续用浏览器本地的缓存，加速页面的访问。</p><p><code>[]</code> 包起来的是占位符。</p><table><thead><tr><th>占位符</th><th>解释</th></tr></thead><tbody><tr><td>ext</td><td>文件后缀名</td></tr><tr><td>id</td><td>文件标识符</td></tr><tr><td>name</td><td>文件名</td></tr><tr><td>path</td><td>文件相对路径</td></tr><tr><td>folder</td><td>文件所在文件夹</td></tr><tr><td>hash</td><td>每次构建生成的唯一 hash 值</td></tr><tr><td>chunkhash</td><td>根据 chunk 内容生成 hash 值</td></tr><tr><td>contenthash</td><td>根据文件内容生成 hash 值</td></tr><tr><td>emoji</td><td>一个随机的指代文件内容的</td></tr></tbody></table><ul><li>hash：和整个项目的构建相关，只要项目文件有修改，整个项目构建的 hash 值就会更改；</li><li>chunkhash：文件的改动只会影响其所在 chunk 的 hash 值（不同的 entry 会生成不同的 chunk）；</li><li>contenthash：根据文件内容来定义 hash ，文件内容不变，则 contenthash 不变。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mini-css-extract-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">search</span><span class="token operator">:</span> <span class="token string">&quot;./src/search.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 使用 [chunkhash] 设置 output 的 filename</span></span>
<span class="line">    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;[name]_[chunkhash:8].js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">&quot;css-loader&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|svg|jpg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;file-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token comment">// 使用 [hash] 设置图片、字体等静态资源</span></span>
<span class="line">              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;images/[name]_[hash:8].[ext]&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 使用 [contenthash] 设置 MiniCssExtractPlugin 的 filename</span></span>
<span class="line">      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;[name]_[contenthash:8].css&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-webpack-merge" tabindex="-1"><a class="header-anchor" href="#_7-webpack-merge"><span>7. webpack-merge</span></a></h2><p>开发环境（development）和生产环境(production) 的构建目标存在着巨大差异。</p><ul><li>开发环境中，需要一个本地服务器，具有 source map 和热更新等功能，更快地构建速度。</li><li>生产环境中，需要更小的包体积（代码压缩+tree-shaking）、进行代码分割、压缩图片等。</li></ul><p>遵循不重复原则，保留一个通用配置，将通用配置混入开发环境和生产环境配置。通过 webpack-merge 实现配置合并。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack-merge</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// webpack.dev.js</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-merge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> common <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./webpack.common.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>common<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;inline-source-map&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// webpack.prod.js</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-merge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> common <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./webpack.common.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>common<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-开发环境" tabindex="-1"><a class="header-anchor" href="#_8-开发环境"><span>8. 开发环境</span></a></h2><h3 id="_8-1-热更新" tabindex="-1"><a class="header-anchor" href="#_8-1-热更新"><span>8.1 热更新</span></a></h3><p><a href="https://www.webpackjs.com/guides/development/" target="_blank" rel="noopener noreferrer">webpack 官网 -- 热更新</a></p><p>热更新（也称热模块替换，HotModuleReplacement，HMR）：在代码发生变化后自动编译代码，无需重新加载整个页面。</p><h4 id="_1-webpack-dev-server-配置" tabindex="-1"><a class="header-anchor" href="#_1-webpack-dev-server-配置"><span>1）webpack-dev-server 配置</span></a></h4><p><code>webpack-dev-server</code> 提供了一个能够实时重新加载的基本的 web server，配置如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器的域名</span></span>
<span class="line">    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&quot;3000&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 启动服务器的端口号</span></span>
<span class="line">    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否自动打开浏览器</span></span>
<span class="line">    <span class="token literal-property property">hot</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否开启 HMR 功能</span></span>
<span class="line">    <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否开启 gzip 压缩</span></span>
<span class="line">    <span class="token keyword">static</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 静态文件目录</span></span>
<span class="line">    <span class="token comment">// contentBase: &#39;./dist&#39;, 静态文件目录，旧版本使用</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从 webpack-dev-server v4 开始，HMR 是默认启用的，<code>hot: true</code> 启用 HMR 必须的 webpack.HotModuleReplacementPlugin 也是内置的。</li><li>为什么需要配置 static？webpack 在打包时，对于静态文件，会直接拷贝到 dist 目录。但是对于开发环境，这个过程太费时，没有必要，所以设置 static 后，直接到静态目录下去读取文件，而不需对文件做任何移动，节省了时间和性能开销。</li><li>webpack-dev-server 在编译后不会写入任何输出文件，而是将 bundle 文件保留在内存中，然后将它们作为可访问资源部署在 server 中。存储在内存中，构建速度更快。</li></ul><h4 id="_2-hmr-启动" tabindex="-1"><a class="header-anchor" href="#_2-hmr-启动"><span>2）HMR 启动</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --watch&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve --open&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行 <code>npm run dev</code>，浏览器自动加载页面。更改任何源文件并保存，代码编译后自动重新加载。</p><h4 id="_3-webpack-dev-middleware" tabindex="-1"><a class="header-anchor" href="#_3-webpack-dev-middleware"><span>3）webpack-dev-middleware</span></a></h4><p><code>webpack-dev-middleware</code> 是一个包装器，它可以把 webpack 处理过的文件发送到 server。这是 <code>webpack-dev-server</code> 内部的原理，但是它也可以作为一个单独的包使用，以便根据需求进行更多自定义设置。</p><h3 id="_8-2-source-map" tabindex="-1"><a class="header-anchor" href="#_8-2-source-map"><span>8.2 source-map</span></a></h3><p>webpack 将多个文件打包至一个 bundle 中，如果发现错误和警告，很难找到源代码位置。</p><p>使用 source-map 可以将编译后的代码映射到原始代码。</p><p>开发环境开启，线上环境关闭，线上排查问题的时候可以将 source-map 上传到错误监控系统。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;cheap-module-source-map&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-source-map-类型" tabindex="-1"><a class="header-anchor" href="#_1-source-map-类型"><span>1）source-map 类型</span></a></h4><table><thead><tr><th>devtool</th><th>build</th><th>rebuild</th><th>是否适合生产环境</th><th>可以定位的代码</th></tr></thead><tbody><tr><td>(none)</td><td>fastest</td><td>fastest</td><td>yes</td><td>bundle，最终输出的整个 chunk 代码</td></tr><tr><td>eval</td><td>fast</td><td>fastest</td><td>no</td><td>generated，编译后的代码，但每个模块是单独的代码文件</td></tr><tr><td>source-map</td><td>slowest</td><td>slowest</td><td>yes</td><td>original，源代码的行和列</td></tr><tr><td>eval-source-map</td><td>slowest</td><td>ok</td><td>no</td><td>original</td></tr><tr><td>eval-cheap-source-map</td><td>ok</td><td>fast</td><td>no</td><td>transformed，loader 处理后，webpack 转换前，且每个模块是单独的文件，定位到行</td></tr><tr><td>eval-cheap-module-source-map</td><td>slow</td><td>fast</td><td>no</td><td>original lines，源代码的行</td></tr><tr><td>inline-source-map</td><td>slowest</td><td>slowest</td><td>no</td><td>original</td></tr><tr><td>hidden-source-map</td><td>slowest</td><td>slowest</td><td>yes</td><td>original</td></tr><tr><td>nosource-source-map</td><td>slowest</td><td>slowest</td><td>yes</td><td>original</td></tr><tr><td>cheap-source-map</td><td>ok</td><td>slow</td><td>no</td><td>transformed</td></tr><tr><td>cheap-module-source-map</td><td>slow</td><td>slow</td><td>no</td><td>original lines</td></tr></tbody></table><p><a href="https://github.com/webpack/webpack/tree/main/examples/source-map" target="_blank" rel="noopener noreferrer">source-map 类型效果示例</a></p><h4 id="_2-source-map-关键字" tabindex="-1"><a class="header-anchor" href="#_2-source-map-关键字"><span>2）source-map 关键字</span></a></h4><p>source-map 类型的规则 <code>^(inline-|eval-|hidden-)?(nosources-)?(cheap-(module-)?)?source-map$</code></p><ul><li>如果有 eval 或者 inline 关键字，就不会生成 .map 文件，其它情况都会生成单独的 .map 文件。</li></ul><table><thead><tr><th>关键字</th><th>描述</th></tr></thead><tbody><tr><td>inline</td><td>在代码内通过 dataUrl 形式引入 sourceURL，不单独生成 .map 文件</td></tr><tr><td>eval</td><td>通过 eval()执行代码，通过 dataUrl 形式引入 sourceURL，不单独生成 .map 文件</td></tr><tr><td>hidden</td><td>生成 .map 文件，但未引用</td></tr><tr><td>nosources</td><td>源代码不包含在 .map 文件中</td></tr><tr><td>cheap</td><td>只定位到行信息，不包括列信息</td></tr><tr><td>module</td><td>未加 module- 是 loader 转换后的代码映射，加 module- 转换为源码映射</td></tr></tbody></table><h4 id="_3-推荐配置" tabindex="-1"><a class="header-anchor" href="#_3-推荐配置"><span>3）推荐配置</span></a></h4><ul><li>开发环境推荐：eval-cheap-module-source-map <ul><li>本地开发首次打包慢点没关系，因为 eval 缓存的原因，rebuild 会很快</li><li>开发中，每行较短，只需要定位到行，所以加上 cheap</li><li>希望能够找到源代码的错误，而不是打包后的，所以需要加上 module</li></ul></li><li>生产环境推荐：(none)，不想别人看到我的源代码</li></ul><h2 id="_9-自动清理构建目录" tabindex="-1"><a class="header-anchor" href="#_9-自动清理构建目录"><span>9. 自动清理构建目录</span></a></h2><p>自动清理构建目录，避免每次构建前都需要手动删除 dist。</p><ol><li>通过 npm scripts 清理构建目录</li></ol><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;rm -rf ./dist &amp;&amp; webpack&quot;</span></span>
<span class="line">    <span class="token comment">// &quot;build&quot;: &quot;rimraf ./dist &amp;&amp; webpack&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用 <code>clean-webpack-plugin</code>，默认会删除 output 指定的输出目录</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev clean-webpack-plugin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> CleanWebpackPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;clean-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-提高打包构建速度" tabindex="-1"><a class="header-anchor" href="#_10-提高打包构建速度"><span>10. 提高打包构建速度</span></a></h2><h3 id="_10-1-优化-resolve-配置" tabindex="-1"><a class="header-anchor" href="#_10-1-优化-resolve-配置"><span>10.1 优化 resolve 配置</span></a></h3><ul><li><code>alias</code>：配置别名。创建 import 或 require 的别名，简化模块引用</li><li><code>extensions</code>：如果用户引入模块时不带扩展名，webpack 就会按照 extensions 配置的数组从左到右的顺序去尝试解析模块 <ul><li>高频文件后缀名放前面；</li><li>手动配置后，默认配置会被覆盖，如果想保留默认配置，可以用 ... 扩展运算符代表默认配置</li></ul></li><li><code>modules</code>：告诉 webpack 解析模块时应该搜索的目录，会大大节省查找时间</li><li><code>resolveLoader</code>：查找 webpack 的  loader  包。一般情况下保持默认配置，但有自定义的 loader 就需要配置一下，可能会找不到 loader 而报错。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 路径处理方法</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 配置别名</span></span>
<span class="line">    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&quot;~&quot;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&quot;@&quot;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src/components&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 配置后缀名</span></span>
<span class="line">    <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.json&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// extensions: [&#39;.ts&#39;, &#39;...&#39;],</span></span>
<span class="line">    <span class="token comment">// 查找模块的路径，优先 src 目录下查找需要解析的文件</span></span>
<span class="line">    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">resolveLoader</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;loader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-2-缩小范围" tabindex="-1"><a class="header-anchor" href="#_10-2-缩小范围"><span>10.2 缩小范围</span></a></h3><p>配置 loader 时，通过 include 和 exclude 指定 loader 的作用目录或需要排除的目录，exclude 优先级更高。</p><h3 id="_10-3" tabindex="-1"><a class="header-anchor" href="#_10-3"><span>10.3</span></a></h3><p>配置不需要解析依赖的第三方大型类库等，提高构建速度。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">noParse</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">jquery|lodash</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-4-多进程打包-thread-loader" tabindex="-1"><a class="header-anchor" href="#_10-4-多进程打包-thread-loader"><span>10.4 多进程打包 thread-loader</span></a></h3><p>实际上在小型项目中，开启多进程打包反而会增加时间成本，因为启动进程和进程间通信都会有一定开销。</p><p>thread-loader 使用时，需将此 loader 放置在其他 loader 之前。放置在此 loader 之后的 loader 会在一个独立的 worker 池中运行。</p><p>每个 worker 都是一个独立的 node.js 进程，其开销大约为 600ms 左右。同时会限制跨进程的数据交换。</p><p>请仅在耗时的操作中使用此 loader。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev thread-loader</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">include</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token string">&quot;thread-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token comment">// 耗时的 loader</span></span>
<span class="line">          <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-5-缓存" tabindex="-1"><a class="header-anchor" href="#_10-5-缓存"><span>10.5 缓存</span></a></h3><p>利用缓存可以大幅提升重复构建的速度。</p><h4 id="_1-babel-loader-开启缓存" tabindex="-1"><a class="header-anchor" href="#_1-babel-loader-开启缓存"><span>1）babel-loader 开启缓存</span></a></h4><p>babel 在转译 js 过程中时间开销比价大，将 babel-loader 的执行结果缓存起来，重新打包的时候，直接读取缓存。</p><p>缓存位置：node_modules/.cache/babel-loader</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 启用缓存</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其它 loader 通过 cache 配置选项选项缓存。</p><h4 id="_2-cache" tabindex="-1"><a class="header-anchor" href="#_2-cache"><span>2）cache</span></a></h4><p>缓存生成的 webpack 模块和 chunk，来改善构建速度。cache 会在开发 模式被设置成 <code>type: &#39;memory&#39;</code> 而且在 生产 模式 中被禁用。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;filesystem&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-减小包体积" tabindex="-1"><a class="header-anchor" href="#_11-减小包体积"><span>11. 减小包体积</span></a></h2><h3 id="_11-1-webpack-bundle-analyzer" tabindex="-1"><a class="header-anchor" href="#_11-1-webpack-bundle-analyzer"><span>11.1 webpack-bundle-analyzer</span></a></h3><p>直观地看到包组成和文件大小。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack-bundle-analyzer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> BundleAnalyzerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-bundle-analyzer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>BundleAnalyzerPlugin<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">BundleAnalyzerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// analyzerMode: &#39;disabled&#39;,  // 不启动展示打包报告的 http 服务器</span></span>
<span class="line">      <span class="token comment">// generateStatsFile: true, // 是否生成 stats.json 文件</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-2-压缩-html-css-js" tabindex="-1"><a class="header-anchor" href="#_11-2-压缩-html-css-js"><span>11.2 压缩 html / CSS / JS</span></a></h3><ul><li><a href="#_2-2-html-%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9">压缩 html</a></li><li><a href="#_3-3-%E5%8E%8B%E7%BC%A9-css">压缩 CSS</a></li><li><a href="#_5-2-js-%E5%8E%8B%E7%BC%A9">压缩 JS</a></li></ul><h3 id="_11-3-tree-shaking" tabindex="-1"><a class="header-anchor" href="#_11-3-tree-shaking"><span>11.3 Tree-shaking</span></a></h3><ul><li>利用 ES Module 可以进行静态分析的特点来检测模块内容的导出、导入以及被使用的情况，保留 Live Code</li><li>消除不会被执行和没有副作用的 Dead Code，即 DCE 过程</li></ul><h3 id="_11-4-scope-hoisting" tabindex="-1"><a class="header-anchor" href="#_11-4-scope-hoisting"><span>11.4 Scope Hoisting</span></a></h3><p>Scope Hoisting 即作用域提升，原理是将多个模块放在同一个作用域下，并重命名防止命名冲突，通过这种方式可以减少函数声明和内存开销。</p><ul><li>webpack 默认支持，在生产环境下默认开启</li><li>只支持 es6 代码</li></ul><h3 id="_11-5-拆分为多页面应用" tabindex="-1"><a class="header-anchor" href="#_11-5-拆分为多页面应用"><span>11.5 拆分为多页面应用</span></a></h3><p>配置多个打包入口。</p><h3 id="_11-6-externals" tabindex="-1"><a class="header-anchor" href="#_11-6-externals"><span>11.6 externals</span></a></h3><p>externals 配置选项提供了「从输出的 bundle 中排除依赖」的方法。</p><p>可以剥离不需要改动的一些依赖，大大节省打包构建的时间。</p><p>例如，从 CDN 引入 jQuery，而不是把它打包：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span></span>
<span class="line">  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://code.jquery.com/jquery-3.1.0.js<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sha256-slogkvB1K3VOkzAI8QITxV3VzpOnkeNVsKvtkYLMjfk=<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>anonymous<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>export <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">externals</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">jquery</span><span class="token operator">:</span> <span class="token string">&quot;jQuery&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-7-splitchunks-分包" tabindex="-1"><a class="header-anchor" href="#_11-7-splitchunks-分包"><span>11.7 splitChunks 分包</span></a></h3><p>optimization.splitChunks 是基于 SplitChunksPlugin 插件实现的。</p><p>默认情况下，它只会影响到按需加载的 chunks，因为修改 initial chunks 会影响到项目的 HTML 文件中的脚本标签。</p><p>webpack 将根据以下条件自动拆分 chunks：</p><ul><li>新的 chunk 可以被共享，或者模块来自于 node_modules 文件夹</li><li>新的 chunk 体积大于 20kb（在进行 min+gz 之前的体积）</li><li>当按需加载 chunks 时，并行请求的最大数量小于或等于 30</li><li>当加载初始化页面时，并发请求的最大数量小于或等于 30</li><li>当尝试满足最后两个条件时，最好使用较大的 chunks。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 默认配置</span></span>
<span class="line">    <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&quot;async&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 有效值为 \`all\`，\`async\` 和 \`initial\`</span></span>
<span class="line">      <span class="token literal-property property">minSize</span><span class="token operator">:</span> <span class="token number">20000</span><span class="token punctuation">,</span> <span class="token comment">// 生成 chunk 的最小体积（≈ 20kb)</span></span>
<span class="line">      <span class="token literal-property property">minRemainingSize</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 确保拆分后剩余的最小 chunk 体积超过限制来避免大小为零的模块</span></span>
<span class="line">      <span class="token literal-property property">minChunks</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 拆分前必须共享模块的最小 chunks 数。</span></span>
<span class="line">      <span class="token literal-property property">maxAsyncRequests</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">// 最大的按需(异步)加载次数</span></span>
<span class="line">      <span class="token literal-property property">maxInitialRequests</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">// 打包后的入口文件加载时，还能同时加载js文件的数量（包括入口文件）</span></span>
<span class="line">      <span class="token literal-property property">enforceSizeThreshold</span><span class="token operator">:</span> <span class="token number">50000</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 配置提取模块的方案</span></span>
<span class="line">        <span class="token literal-property property">defaultVendors</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">reuseExistingChunk</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">minChunks</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">reuseExistingChunk</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 在项目中的配置示例</span></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;styles&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(s?css|less|sass)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">common</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;chunk-common&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">minChunks</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">maxInitialRequests</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">minSize</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">reuseExistingChunk</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">vendors</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;chunk-vendors&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\\\/]node_modules[\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">reuseExistingChunk</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment">// ... 根据不同项目再细化拆分内容</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-8-动态路由" tabindex="-1"><a class="header-anchor" href="#_11-8-动态路由"><span>11.8 动态路由</span></a></h3>`,196),l=[t];function i(o,c){return a(),n("div",null,l)}const u=s(p,[["render",i],["__file","webpack.html.vue"]]),d=JSON.parse('{"path":"/tutorial/webpack.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. webpack 配置项","slug":"_1-webpack-配置项","link":"#_1-webpack-配置项","children":[{"level":3,"title":"1.1 入口 entry","slug":"_1-1-入口-entry","link":"#_1-1-入口-entry","children":[]},{"level":3,"title":"1.2 输出 output","slug":"_1-2-输出-output","link":"#_1-2-输出-output","children":[]},{"level":3,"title":"1.3 loader 和内置的 Asset Modules","slug":"_1-3-loader-和内置的-asset-modules","link":"#_1-3-loader-和内置的-asset-modules","children":[]},{"level":3,"title":"1.4 plugins","slug":"_1-4-plugins","link":"#_1-4-plugins","children":[]},{"level":3,"title":"1.5 mode","slug":"_1-5-mode","link":"#_1-5-mode","children":[]}]},{"level":2,"title":"2. 处理 HTML","slug":"_2-处理-html","link":"#_2-处理-html","children":[{"level":3,"title":"2.1 html-webpack-plugin","slug":"_2-1-html-webpack-plugin","link":"#_2-1-html-webpack-plugin","children":[]},{"level":3,"title":"2.2 HTML 文件压缩","slug":"_2-2-html-文件压缩","link":"#_2-2-html-文件压缩","children":[]}]},{"level":2,"title":"3. 处理 CSS","slug":"_3-处理-css","link":"#_3-处理-css","children":[{"level":3,"title":"3.1 CSS Loader","slug":"_3-1-css-loader","link":"#_3-1-css-loader","children":[]},{"level":3,"title":"3.2 分离 CSS 文件","slug":"_3-2-分离-css-文件","link":"#_3-2-分离-css-文件","children":[]},{"level":3,"title":"3.3 压缩 CSS","slug":"_3-3-压缩-css","link":"#_3-3-压缩-css","children":[]},{"level":3,"title":"3.4 自动补齐 CSS 前缀","slug":"_3-4-自动补齐-css-前缀","link":"#_3-4-自动补齐-css-前缀","children":[]},{"level":3,"title":"3.5 px 自动转换 rem","slug":"_3-5-px-自动转换-rem","link":"#_3-5-px-自动转换-rem","children":[]}]},{"level":2,"title":"4. 加载图像、字体等资源","slug":"_4-加载图像、字体等资源","link":"#_4-加载图像、字体等资源","children":[]},{"level":2,"title":"5. 处理 JS","slug":"_5-处理-js","link":"#_5-处理-js","children":[{"level":3,"title":"5.1 babel-loader","slug":"_5-1-babel-loader","link":"#_5-1-babel-loader","children":[]},{"level":3,"title":"5.2 JS 压缩","slug":"_5-2-js-压缩","link":"#_5-2-js-压缩","children":[]}]},{"level":2,"title":"6. 文件指纹","slug":"_6-文件指纹","link":"#_6-文件指纹","children":[]},{"level":2,"title":"7. webpack-merge","slug":"_7-webpack-merge","link":"#_7-webpack-merge","children":[]},{"level":2,"title":"8. 开发环境","slug":"_8-开发环境","link":"#_8-开发环境","children":[{"level":3,"title":"8.1 热更新","slug":"_8-1-热更新","link":"#_8-1-热更新","children":[]},{"level":3,"title":"8.2 source-map","slug":"_8-2-source-map","link":"#_8-2-source-map","children":[]}]},{"level":2,"title":"9. 自动清理构建目录","slug":"_9-自动清理构建目录","link":"#_9-自动清理构建目录","children":[]},{"level":2,"title":"10. 提高打包构建速度","slug":"_10-提高打包构建速度","link":"#_10-提高打包构建速度","children":[{"level":3,"title":"10.1 优化 resolve 配置","slug":"_10-1-优化-resolve-配置","link":"#_10-1-优化-resolve-配置","children":[]},{"level":3,"title":"10.2 缩小范围","slug":"_10-2-缩小范围","link":"#_10-2-缩小范围","children":[]},{"level":3,"title":"10.3","slug":"_10-3","link":"#_10-3","children":[]},{"level":3,"title":"10.4 多进程打包 thread-loader","slug":"_10-4-多进程打包-thread-loader","link":"#_10-4-多进程打包-thread-loader","children":[]},{"level":3,"title":"10.5 缓存","slug":"_10-5-缓存","link":"#_10-5-缓存","children":[]}]},{"level":2,"title":"11. 减小包体积","slug":"_11-减小包体积","link":"#_11-减小包体积","children":[{"level":3,"title":"11.1 webpack-bundle-analyzer","slug":"_11-1-webpack-bundle-analyzer","link":"#_11-1-webpack-bundle-analyzer","children":[]},{"level":3,"title":"11.2 压缩 html / CSS / JS","slug":"_11-2-压缩-html-css-js","link":"#_11-2-压缩-html-css-js","children":[]},{"level":3,"title":"11.3 Tree-shaking","slug":"_11-3-tree-shaking","link":"#_11-3-tree-shaking","children":[]},{"level":3,"title":"11.4 Scope Hoisting","slug":"_11-4-scope-hoisting","link":"#_11-4-scope-hoisting","children":[]},{"level":3,"title":"11.5 拆分为多页面应用","slug":"_11-5-拆分为多页面应用","link":"#_11-5-拆分为多页面应用","children":[]},{"level":3,"title":"11.6 externals","slug":"_11-6-externals","link":"#_11-6-externals","children":[]},{"level":3,"title":"11.7 splitChunks 分包","slug":"_11-7-splitchunks-分包","link":"#_11-7-splitchunks-分包","children":[]},{"level":3,"title":"11.8 动态路由","slug":"_11-8-动态路由","link":"#_11-8-动态路由","children":[]}]}],"git":{"updatedTime":1724828027000,"contributors":[{"name":"yaocong","email":"cong1207@qq.com","commits":5}]},"filePathRelative":"tutorial/webpack.md"}');export{u as comp,d as data};
